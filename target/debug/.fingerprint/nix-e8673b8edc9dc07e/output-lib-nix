{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `fushsia`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/lib.rs","byte_start":866,"byte_end":887,"line_start":37,"line_end":37,"column_start":11,"column_end":32,"is_primary":true,"text":[{"text":"          target_os = \"fushsia\",","highlight_start":11,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, and `uefi` and 9 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unexpected_cfgs)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"there is a expected value with a similar name","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/lib.rs","byte_start":878,"byte_end":887,"line_start":37,"line_end":37,"column_start":23,"column_end":32,"is_primary":true,"text":[{"text":"          target_os = \"fushsia\",","highlight_start":23,"highlight_end":32}],"label":null,"suggested_replacement":"\"fuchsia\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `fushsia`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/lib.rs:37:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m          target_os = \"fushsia\",\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is a expected value with a similar name: `\"fuchsia\"`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, and `uefi` and 9 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unexpected_cfgs)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`...` range patterns are deprecated","code":{"code":"ellipsis_inclusive_range_patterns","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/features.rs","byte_start":955,"byte_end":958,"line_start":41,"line_end":41,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                b'0'...b'9' => {","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(ellipsis_inclusive_range_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `..=` for an inclusive range","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/features.rs","byte_start":955,"byte_end":958,"line_start":41,"line_end":41,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                b'0'...b'9' => {","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":"..=","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `...` range patterns are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/features.rs:41:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                b'0'...b'9' => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `..=` for an inclusive range\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/fcntl.rs","byte_start":5188,"byte_end":5191,"line_start":141,"line_end":141,"column_start":14,"column_end":17,"is_primary":true,"text":[{"text":"    let fd = try!(path.with_nix_path(|cstr| {","highlight_start":14,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/fcntl.rs:141:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let fd = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/fcntl.rs","byte_start":5455,"byte_end":5458,"line_start":149,"line_end":149,"column_start":14,"column_end":17,"is_primary":true,"text":[{"text":"    let fd = try!(path.with_nix_path(|cstr| {","highlight_start":14,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/fcntl.rs:149:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let fd = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/fcntl.rs","byte_start":6101,"byte_end":6104,"line_start":169,"line_end":169,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/fcntl.rs:169:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/fcntl.rs","byte_start":6421,"byte_end":6424,"line_start":178,"line_end":178,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/fcntl.rs:178:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs","byte_start":1573,"byte_end":1576,"line_start":66,"line_end":66,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(try!(try!(try!(","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs:66:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(try!(try!(try!(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs","byte_start":1578,"byte_end":1581,"line_start":66,"line_end":66,"column_start":20,"column_end":23,"is_primary":true,"text":[{"text":"    let res = try!(try!(try!(try!(","highlight_start":20,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs:66:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(try!(try!(try!(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs","byte_start":1583,"byte_end":1586,"line_start":66,"line_end":66,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"    let res = try!(try!(try!(try!(","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs:66:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(try!(try!(try!(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs","byte_start":1588,"byte_end":1591,"line_start":66,"line_end":66,"column_start":30,"column_end":33,"is_primary":true,"text":[{"text":"    let res = try!(try!(try!(try!(","highlight_start":30,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs:66:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(try!(try!(try!(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs","byte_start":2317,"byte_end":2320,"line_start":87,"line_end":87,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(target.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs:87:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(target.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs","byte_start":2540,"byte_end":2543,"line_start":95,"line_end":95,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(target.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mount.rs:95:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(target.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around type","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":4924,"byte_end":4925,"line_start":153,"line_end":153,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"pub fn mq_set_nonblock(mqd: mqd_t) -> Result<(MqAttr)> {","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":4931,"byte_end":4932,"line_start":153,"line_end":153,"column_start":53,"column_end":54,"is_primary":true,"text":[{"text":"pub fn mq_set_nonblock(mqd: mqd_t) -> Result<(MqAttr)> {","highlight_start":53,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":4924,"byte_end":4925,"line_start":153,"line_end":153,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"pub fn mq_set_nonblock(mqd: mqd_t) -> Result<(MqAttr)> {","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":4931,"byte_end":4932,"line_start":153,"line_end":153,"column_start":53,"column_end":54,"is_primary":true,"text":[{"text":"pub fn mq_set_nonblock(mqd: mqd_t) -> Result<(MqAttr)> {","highlight_start":53,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs:153:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn mq_set_nonblock(mqd: mqd_t) -> Result<(MqAttr)> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub fn mq_set_nonblock(mqd: mqd_t) -> Result<\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mMqAttr\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub fn mq_set_nonblock(mqd: mqd_t) -> Result<MqAttr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":4954,"byte_end":4957,"line_start":154,"line_end":154,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"    let oldattr = try!(mq_getattr(mqd));","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs:154:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let oldattr = try!(mq_getattr(mqd));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary parentheses around type","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":5430,"byte_end":5431,"line_start":165,"line_end":165,"column_start":49,"column_end":50,"is_primary":true,"text":[{"text":"pub fn mq_remove_nonblock(mqd: mqd_t) -> Result<(MqAttr)> {","highlight_start":49,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":5437,"byte_end":5438,"line_start":165,"line_end":165,"column_start":56,"column_end":57,"is_primary":true,"text":[{"text":"pub fn mq_remove_nonblock(mqd: mqd_t) -> Result<(MqAttr)> {","highlight_start":56,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":5430,"byte_end":5431,"line_start":165,"line_end":165,"column_start":49,"column_end":50,"is_primary":true,"text":[{"text":"pub fn mq_remove_nonblock(mqd: mqd_t) -> Result<(MqAttr)> {","highlight_start":49,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":5437,"byte_end":5438,"line_start":165,"line_end":165,"column_start":56,"column_end":57,"is_primary":true,"text":[{"text":"pub fn mq_remove_nonblock(mqd: mqd_t) -> Result<(MqAttr)> {","highlight_start":56,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary parentheses around type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs:165:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn mq_remove_nonblock(mqd: mqd_t) -> Result<(MqAttr)> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mpub fn mq_remove_nonblock(mqd: mqd_t) -> Result<\u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mMqAttr\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mpub fn mq_remove_nonblock(mqd: mqd_t) -> Result<MqAttr> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":5460,"byte_end":5463,"line_start":166,"line_end":166,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"    let oldattr = try!(mq_getattr(mqd));","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs:166:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let oldattr = try!(mq_getattr(mqd));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/net/if_.rs","byte_start":359,"byte_end":362,"line_start":12,"line_end":12,"column_start":20,"column_end":23,"is_primary":true,"text":[{"text":"    let if_index = try!(name.with_nix_path(|name| unsafe { libc::if_nametoindex(name.as_ptr()) }));","highlight_start":20,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/net/if_.rs:12:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let if_index = try!(name.with_nix_path(|name| unsafe { libc::if_nametoindex(name.as_ptr()) }));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `osx`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/net/if_.rs","byte_start":4153,"byte_end":4170,"line_start":99,"line_end":99,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"                  target_os = \"osx\"))]","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, and `uefi` and 9 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"there is a expected value with a similar name","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/net/if_.rs","byte_start":4165,"byte_end":4170,"line_start":99,"line_end":99,"column_start":31,"column_end":36,"is_primary":true,"text":[{"text":"                  target_os = \"osx\"))]","highlight_start":31,"highlight_end":36}],"label":null,"suggested_replacement":"\"psx\"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `osx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/net/if_.rs:99:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                  target_os = \"osx\"))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is a expected value with a similar name: `\"psx\"`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, and `uefi` and 9 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":7338,"byte_end":7341,"line_start":311,"line_end":311,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        try!(pthread_sigmask(SigmaskHow::SIG_SETMASK, None, Some(&mut oldmask)));","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:311:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        try!(pthread_sigmask(SigmaskHow::SIG_SETMASK, None, Some(&mut oldmask)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":8260,"byte_end":8263,"line_start":333,"line_end":333,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        try!(pthread_sigmask(how, Some(self), Some(&mut oldmask)));","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:333:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        try!(pthread_sigmask(how, Some(self), Some(&mut oldmask)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`extern` declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9025,"byte_end":9031,"line_start":358,"line_end":358,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    Handler(extern fn(libc::c_int)),","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(missing_abi)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9025,"byte_end":9031,"line_start":358,"line_end":358,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"    Handler(extern fn(libc::c_int)),","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `extern` declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:358:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Handler(extern fn(libc::c_int)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(missing_abi)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`extern` declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9064,"byte_end":9070,"line_start":359,"line_end":359,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"    SigAction(extern fn(libc::c_int, *mut libc::siginfo_t, *mut libc::c_void))","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9064,"byte_end":9070,"line_start":359,"line_end":359,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"    SigAction(extern fn(libc::c_int, *mut libc::siginfo_t, *mut libc::c_void))","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `extern` declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:359:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m359\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SigAction(extern fn(libc::c_int, *mut libc::siginfo_t, *mut libc::c_void))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`extern` declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9667,"byte_end":9673,"line_start":374,"line_end":374,"column_start":51,"column_end":57,"is_primary":true,"text":[{"text":"            SigHandler::Handler(f) => f as *const extern fn(libc::c_int) as usize,","highlight_start":51,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9667,"byte_end":9673,"line_start":374,"line_end":374,"column_start":51,"column_end":57,"is_primary":true,"text":[{"text":"            SigHandler::Handler(f) => f as *const extern fn(libc::c_int) as usize,","highlight_start":51,"highlight_end":57}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `extern` declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:374:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            SigHandler::Handler(f) => f as *const extern fn(libc::c_int) as usize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`extern` declarations without an explicit ABI are deprecated","code":{"code":"missing_abi","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9752,"byte_end":9758,"line_start":375,"line_end":375,"column_start":53,"column_end":59,"is_primary":true,"text":[{"text":"            SigHandler::SigAction(f) => f as *const extern fn(libc::c_int, *mut libc::siginfo_t, *mut libc::c_void) as usize,","highlight_start":53,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"explicitly specify the \"C\" ABI","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9752,"byte_end":9758,"line_start":375,"line_end":375,"column_start":53,"column_end":59,"is_primary":true,"text":[{"text":"            SigHandler::SigAction(f) => f as *const extern fn(libc::c_int, *mut libc::siginfo_t, *mut libc::c_void) as usize,","highlight_start":53,"highlight_end":59}],"label":null,"suggested_replacement":"extern \"C\"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `extern` declarations without an explicit ABI are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:375:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            SigHandler::SigAction(f) => f as *const extern fn(libc::c_int, *mut libc::siginfo_t, *mut libc::c_void) as usize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: explicitly specify the \"C\" ABI: `extern \"C\"`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signalfd.rs","byte_start":3350,"byte_end":3353,"line_start":91,"line_end":91,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"        let fd = try!(signalfd(SIGNALFD_NEW, mask, flags));","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signalfd.rs:91:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let fd = try!(signalfd(SIGNALFD_NEW, mask, flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs","byte_start":19656,"byte_end":19659,"line_start":600,"line_end":600,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        try!(path.with_nix_path(|cstr| {","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs:600:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m600\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs","byte_start":24776,"byte_end":24779,"line_start":759,"line_end":759,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"        Ok(SockAddr::Unix(try!(UnixAddr::new(path))))","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs:759:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m759\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Ok(SockAddr::Unix(try!(UnixAddr::new(path))))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition value: `nacl`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":6607,"byte_end":6625,"line_start":169,"line_end":169,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"          target_os = \"nacl\"))]","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, and `uefi` and 9 more","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition value: `nacl`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:169:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m          target_os = \"nacl\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected values for `target_os` are: `aix`, `amdhsa`, `android`, `cuda`, `cygwin`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `lynxos178`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, and `uefi` and 9 more\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2410,"byte_end":2475,"line_start":76,"line_end":76,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, bool, GetBool, SetBool);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":4122,"byte_end":4196,"line_start":132,"line_end":132,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, ReuseAddr, libc::SOL_SOCKET, libc::SO_REUSEADDR, bool);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, ReuseAddr, libc::SOL_SOCKET, libc::SO_REUSEADDR, bool);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2410,"byte_end":2475,"line_start":76,"line_end":76,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, bool, GetBool, SetBool);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":4198,"byte_end":4272,"line_start":133,"line_end":133,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, ReusePort, libc::SOL_SOCKET, libc::SO_REUSEPORT, bool);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, ReusePort, libc::SOL_SOCKET, libc::SO_REUSEPORT, bool);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2410,"byte_end":2475,"line_start":76,"line_end":76,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, bool, GetBool, SetBool);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":4274,"byte_end":4349,"line_start":134,"line_end":134,"column_start":1,"column_end":76,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, TcpNoDelay, libc::IPPROTO_TCP, libc::TCP_NODELAY, bool);","highlight_start":1,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, TcpNoDelay, libc::IPPROTO_TCP, libc::TCP_NODELAY, bool);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3987,"byte_end":4065,"line_start":122,"line_end":122,"column_start":9,"column_end":87,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, $ty, GetStruct<$ty>, SetStruct<$ty>);","highlight_start":9,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":4351,"byte_end":4427,"line_start":135,"line_end":135,"column_start":1,"column_end":77,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, Linger, libc::SOL_SOCKET, libc::SO_LINGER, libc::linger);","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, Linger, libc::SOL_SOCKET, libc::SO_LINGER, libc::linger);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2551,"byte_end":2610,"line_start":80,"line_end":80,"column_start":9,"column_end":68,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, u8, GetU8, SetU8);","highlight_start":9,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":5527,"byte_end":5608,"line_start":152,"line_end":152,"column_start":1,"column_end":82,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, IpMulticastTtl, libc::IPPROTO_IP, libc::IP_MULTICAST_TTL, u8);","highlight_start":1,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, IpMulticastTtl, libc::IPPROTO_IP, libc::IP_MULTICAST_TTL, u8);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2410,"byte_end":2475,"line_start":76,"line_end":76,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, bool, GetBool, SetBool);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":5610,"byte_end":5695,"line_start":153,"line_end":153,"column_start":1,"column_end":86,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, IpMulticastLoop, libc::IPPROTO_IP, libc::IP_MULTICAST_LOOP, bool);","highlight_start":1,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, IpMulticastLoop, libc::IPPROTO_IP, libc::IP_MULTICAST_LOOP, bool);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3987,"byte_end":4065,"line_start":122,"line_end":122,"column_start":9,"column_end":87,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, $ty, GetStruct<$ty>, SetStruct<$ty>);","highlight_start":9,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":5697,"byte_end":5778,"line_start":154,"line_end":154,"column_start":1,"column_end":82,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, ReceiveTimeout, libc::SOL_SOCKET, libc::SO_RCVTIMEO, TimeVal);","highlight_start":1,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, ReceiveTimeout, libc::SOL_SOCKET, libc::SO_RCVTIMEO, TimeVal);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3987,"byte_end":4065,"line_start":122,"line_end":122,"column_start":9,"column_end":87,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, $ty, GetStruct<$ty>, SetStruct<$ty>);","highlight_start":9,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":5780,"byte_end":5858,"line_start":155,"line_end":155,"column_start":1,"column_end":79,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, SendTimeout, libc::SOL_SOCKET, libc::SO_SNDTIMEO, TimeVal);","highlight_start":1,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, SendTimeout, libc::SOL_SOCKET, libc::SO_SNDTIMEO, TimeVal);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2410,"byte_end":2475,"line_start":76,"line_end":76,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, bool, GetBool, SetBool);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":5860,"byte_end":5934,"line_start":156,"line_end":156,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, Broadcast, libc::SOL_SOCKET, libc::SO_BROADCAST, bool);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, Broadcast, libc::SOL_SOCKET, libc::SO_BROADCAST, bool);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2410,"byte_end":2475,"line_start":76,"line_end":76,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, bool, GetBool, SetBool);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":5936,"byte_end":6010,"line_start":157,"line_end":157,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, OobInline, libc::SOL_SOCKET, libc::SO_OOBINLINE, bool);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, OobInline, libc::SOL_SOCKET, libc::SO_OOBINLINE, bool);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3212,"byte_end":3264,"line_start":99,"line_end":99,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2987,"byte_end":3052,"line_start":92,"line_end":92,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(GetOnly, $name, $level, $flag, $ty, GetStruct<$ty>);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":6012,"byte_end":6086,"line_start":158,"line_end":158,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"sockopt_impl!(GetOnly, SocketError, libc::SOL_SOCKET, libc::SO_ERROR, i32);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(GetOnly, SocketError, libc::SOL_SOCKET, libc::SO_ERROR, i32);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2410,"byte_end":2475,"line_start":76,"line_end":76,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, bool, GetBool, SetBool);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":6088,"byte_end":6162,"line_start":159,"line_end":159,"column_start":1,"column_end":75,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, KeepAlive, libc::SOL_SOCKET, libc::SO_KEEPALIVE, bool);","highlight_start":1,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, KeepAlive, libc::SOL_SOCKET, libc::SO_KEEPALIVE, bool);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3212,"byte_end":3264,"line_start":99,"line_end":99,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2987,"byte_end":3052,"line_start":92,"line_end":92,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(GetOnly, $name, $level, $flag, $ty, GetStruct<$ty>);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":6221,"byte_end":6321,"line_start":161,"line_end":161,"column_start":1,"column_end":101,"is_primary":false,"text":[{"text":"sockopt_impl!(GetOnly, PeerCredentials, libc::SOL_SOCKET, libc::SO_PEERCRED, super::UnixCredentials);","highlight_start":1,"highlight_end":101}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(GetOnly, PeerCredentials, libc::SOL_SOCKET, libc::SO_PEERCRED, super::UnixCredentials);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3987,"byte_end":4065,"line_start":122,"line_end":122,"column_start":9,"column_end":87,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, $ty, GetStruct<$ty>, SetStruct<$ty>);","highlight_start":9,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":6629,"byte_end":6705,"line_start":170,"line_end":170,"column_start":1,"column_end":77,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, TcpKeepIdle, libc::IPPROTO_TCP, libc::TCP_KEEPIDLE, u32);","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, TcpKeepIdle, libc::IPPROTO_TCP, libc::TCP_KEEPIDLE, u32);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2689,"byte_end":2757,"line_start":84,"line_end":84,"column_start":9,"column_end":77,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, usize, GetUsize, SetUsize);","highlight_start":9,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":6707,"byte_end":6776,"line_start":171,"line_end":171,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, RcvBuf, libc::SOL_SOCKET, libc::SO_RCVBUF, usize);","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, RcvBuf, libc::SOL_SOCKET, libc::SO_RCVBUF, usize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2689,"byte_end":2757,"line_start":84,"line_end":84,"column_start":9,"column_end":77,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, usize, GetUsize, SetUsize);","highlight_start":9,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":6778,"byte_end":6847,"line_start":172,"line_end":172,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, SndBuf, libc::SOL_SOCKET, libc::SO_SNDBUF, usize);","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, SndBuf, libc::SOL_SOCKET, libc::SO_SNDBUF, usize);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3212,"byte_end":3264,"line_start":99,"line_end":99,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2987,"byte_end":3052,"line_start":92,"line_end":92,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(GetOnly, $name, $level, $flag, $ty, GetStruct<$ty>);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":7129,"byte_end":7211,"line_start":177,"line_end":177,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"sockopt_impl!(GetOnly, SockType, libc::SOL_SOCKET, libc::SO_TYPE, super::SockType);","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(GetOnly, SockType, libc::SOL_SOCKET, libc::SO_TYPE, super::SockType);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3212,"byte_end":3264,"line_start":99,"line_end":99,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1579,"byte_end":1638,"line_start":52,"line_end":52,"column_start":9,"column_end":68,"is_primary":false,"text":[{"text":"        sockopt_impl!(GetOnly, $name, $level, $flag, bool, GetBool);","highlight_start":9,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":7213,"byte_end":7292,"line_start":178,"line_end":178,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"sockopt_impl!(GetOnly, AcceptConn, libc::SOL_SOCKET, libc::SO_ACCEPTCONN, bool);","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(GetOnly, AcceptConn, libc::SOL_SOCKET, libc::SO_ACCEPTCONN, bool);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3212,"byte_end":3264,"line_start":99,"line_end":99,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2987,"byte_end":3052,"line_start":92,"line_end":92,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(GetOnly, $name, $level, $flag, $ty, GetStruct<$ty>);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":7350,"byte_end":7441,"line_start":180,"line_end":180,"column_start":1,"column_end":92,"is_primary":false,"text":[{"text":"sockopt_impl!(GetOnly, OriginalDst, libc::SOL_IP, libc::SO_ORIGINAL_DST, libc::sockaddr_in);","highlight_start":1,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(GetOnly, OriginalDst, libc::SOL_IP, libc::SO_ORIGINAL_DST, libc::sockaddr_in);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2410,"byte_end":2475,"line_start":76,"line_end":76,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, bool, GetBool, SetBool);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":7443,"byte_end":7524,"line_start":181,"line_end":181,"column_start":1,"column_end":82,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, ReceiveTimestamp, libc::SOL_SOCKET, libc::SO_TIMESTAMP, bool);","highlight_start":1,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, ReceiveTimestamp, libc::SOL_SOCKET, libc::SO_TIMESTAMP, bool);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1318,"byte_end":1321,"line_start":40,"line_end":40,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                    try!(Errno::result(res));","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":3855,"byte_end":3907,"line_start":118,"line_end":118,"column_start":9,"column_end":61,"is_primary":false,"text":[{"text":"        getsockopt_impl!($name, $level, $flag, $ty, $getter);","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":2410,"byte_end":2475,"line_start":76,"line_end":76,"column_start":9,"column_end":74,"is_primary":false,"text":[{"text":"        sockopt_impl!(Both, $name, $level, $flag, bool, GetBool, SetBool);","highlight_start":9,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":7582,"byte_end":7658,"line_start":183,"line_end":183,"column_start":1,"column_end":77,"is_primary":false,"text":[{"text":"sockopt_impl!(Both, IpTransparent, libc::SOL_IP, libc::IP_TRANSPARENT, bool);","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"sockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":1480,"byte_end":1505,"line_start":50,"line_end":50,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"macro_rules! sockopt_impl {","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"getsockopt_impl!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":797,"byte_end":825,"line_start":28,"line_end":28,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! getsockopt_impl {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:40:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0msockopt_impl!(Both, IpTransparent, libc::SOL_IP, libc::IP_TRANSPARENT, bool);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `getsockopt_impl` which comes from the expansion of the macro `sockopt_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":25151,"byte_end":25154,"line_start":664,"line_end":664,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"        bytes: try!(Errno::result(ret)) as usize,","highlight_start":16,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:664:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m664\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        bytes: try!(Errno::result(ret)) as usize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":26488,"byte_end":26491,"line_start":697,"line_end":697,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(Errno::result(unsafe { libc::socket(domain as c_int, ty, protocol) }));","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:697:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m697\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(Errno::result(unsafe { libc::socket(domain as c_int, ty, protocol) }));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":26986,"byte_end":26989,"line_start":711,"line_end":711,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"                try!(fcntl(res, F_SETFD(FdFlag::FD_CLOEXEC)));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:711:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m711\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                try!(fcntl(res, F_SETFD(FdFlag::FD_CLOEXEC)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":27121,"byte_end":27124,"line_start":715,"line_end":715,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"                try!(fcntl(res, F_SETFL(OFlag::O_NONBLOCK)));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:715:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m715\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                try!(fcntl(res, F_SETFL(OFlag::O_NONBLOCK)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":27894,"byte_end":27897,"line_start":742,"line_end":742,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    try!(Errno::result(res));","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:742:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m742\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":28341,"byte_end":28344,"line_start":756,"line_end":756,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"                try!(fcntl(fds[0], F_SETFD(FdFlag::FD_CLOEXEC)));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:756:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m756\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                try!(fcntl(fds[0], F_SETFD(FdFlag::FD_CLOEXEC)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":28407,"byte_end":28410,"line_start":757,"line_end":757,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"                try!(fcntl(fds[1], F_SETFD(FdFlag::FD_CLOEXEC)));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:757:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m757\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                try!(fcntl(fds[1], F_SETFD(FdFlag::FD_CLOEXEC)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":28545,"byte_end":28548,"line_start":761,"line_end":761,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"                try!(fcntl(fds[0], F_SETFL(OFlag::O_NONBLOCK)));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:761:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m761\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                try!(fcntl(fds[0], F_SETFL(OFlag::O_NONBLOCK)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":28610,"byte_end":28613,"line_start":762,"line_end":762,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"                try!(fcntl(fds[1], F_SETFL(OFlag::O_NONBLOCK)));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:762:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m762\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                try!(fcntl(fds[1], F_SETFL(OFlag::O_NONBLOCK)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":30469,"byte_end":30472,"line_start":824,"line_end":824,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(Errno::result(unsafe { libc::accept(sockfd, ptr::null_mut(), ptr::null_mut()) }));","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:824:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m824\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(Errno::result(unsafe { libc::accept(sockfd, ptr::null_mut(), ptr::null_mut()) }));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":30944,"byte_end":30947,"line_start":837,"line_end":837,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"            try!(fcntl(res, F_SETFD(FdFlag::FD_CLOEXEC)));","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:837:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m837\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            try!(fcntl(res, F_SETFD(FdFlag::FD_CLOEXEC)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":31067,"byte_end":31070,"line_start":841,"line_end":841,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"            try!(fcntl(res, F_SETFL(OFlag::O_NONBLOCK)));","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:841:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m841\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            try!(fcntl(res, F_SETFL(OFlag::O_NONBLOCK)));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":32791,"byte_end":32794,"line_start":897,"line_end":897,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"        let ret = try!(Errno::result(libc::recvfrom(","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:897:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let ret = try!(Errno::result(libc::recvfrom(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":35965,"byte_end":35968,"line_start":997,"line_end":997,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        try!(Errno::result(ret));","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:997:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m997\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        try!(Errno::result(ret));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":36499,"byte_end":36502,"line_start":1013,"line_end":1013,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        try!(Errno::result(ret));","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:1013:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1013\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        try!(Errno::result(ret));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":831,"byte_end":834,"line_start":45,"line_end":45,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:45:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":1933,"byte_end":1936,"line_start":87,"line_end":87,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    try!(Errno::result(res));","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:87:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    try!(Errno::result(res));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":1794,"byte_end":1797,"line_start":81,"line_end":81,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:81:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2246,"byte_end":2249,"line_start":100,"line_end":100,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    try!(Errno::result(res));","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:100:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2106,"byte_end":2109,"line_start":94,"line_end":94,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:94:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2459,"byte_end":2462,"line_start":109,"line_end":109,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    try!(Errno::result(res));","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:109:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2822,"byte_end":2825,"line_start":120,"line_end":120,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    try!(Errno::result(res));","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:120:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2664,"byte_end":2667,"line_start":116,"line_end":116,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(pathname.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:116:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(pathname.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `taget_os`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":14810,"byte_end":14829,"line_start":349,"line_end":349,"column_start":17,"column_end":36,"is_primary":true,"text":[{"text":"                taget_os = \"netbsd\"))]","highlight_start":17,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(taget_os, values(\"netbsd\"))'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(taget_os, values(\\\"netbsd\\\"))\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"there is a config with a similar name and value","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":14810,"byte_end":14818,"line_start":349,"line_end":349,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"                taget_os = \"netbsd\"))]","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"target_os","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `taget_os`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs:349:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                taget_os = \"netbsd\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(taget_os, values(\"netbsd\"))'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(taget_os, values(\\\"netbsd\\\"))\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a config with a similar name and value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                ta\u001b[0m\u001b[0m\u001b[38;5;10mr\u001b[0m\u001b[0mget_os = \"netbsd\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `taget_os`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":15145,"byte_end":15164,"line_start":358,"line_end":358,"column_start":17,"column_end":36,"is_primary":true,"text":[{"text":"                taget_os = \"netbsd\"))]","highlight_start":17,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(taget_os, values(\"netbsd\"))'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(taget_os, values(\\\"netbsd\\\"))\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"there is a config with a similar name and value","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":15145,"byte_end":15153,"line_start":358,"line_end":358,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"                taget_os = \"netbsd\"))]","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"target_os","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `taget_os`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs:358:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                taget_os = \"netbsd\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(taget_os, values(\"netbsd\"))'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(taget_os, values(\\\"netbsd\\\"))\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a config with a similar name and value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                ta\u001b[0m\u001b[0m\u001b[38;5;10mr\u001b[0m\u001b[0mget_os = \"netbsd\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `taget_os`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":18706,"byte_end":18725,"line_start":446,"line_end":446,"column_start":23,"column_end":42,"is_primary":true,"text":[{"text":"                      taget_os = \"netbsd\"))]","highlight_start":23,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(taget_os, values(\"netbsd\"))'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(taget_os, values(\\\"netbsd\\\"))\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"there is a config with a similar name and value","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":18706,"byte_end":18714,"line_start":446,"line_end":446,"column_start":23,"column_end":31,"is_primary":true,"text":[{"text":"                      taget_os = \"netbsd\"))]","highlight_start":23,"highlight_end":31}],"label":null,"suggested_replacement":"target_os","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `taget_os`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs:446:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m446\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                      taget_os = \"netbsd\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(taget_os, values(\"netbsd\"))'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(taget_os, values(\\\"netbsd\\\"))\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a config with a similar name and value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m446\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      ta\u001b[0m\u001b[0m\u001b[38;5;10mr\u001b[0m\u001b[0mget_os = \"netbsd\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `taget_os`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":19146,"byte_end":19165,"line_start":455,"line_end":455,"column_start":23,"column_end":42,"is_primary":true,"text":[{"text":"                      taget_os = \"netbsd\"))]","highlight_start":23,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(taget_os, values(\"netbsd\"))'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(taget_os, values(\\\"netbsd\\\"))\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"there is a config with a similar name and value","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":19146,"byte_end":19154,"line_start":455,"line_end":455,"column_start":23,"column_end":31,"is_primary":true,"text":[{"text":"                      taget_os = \"netbsd\"))]","highlight_start":23,"highlight_end":31}],"label":null,"suggested_replacement":"target_os","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `taget_os`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs:455:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m455\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                      taget_os = \"netbsd\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m             [lints.rust]\u001b[0m\n\u001b[0m             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(taget_os, values(\"netbsd\"))'] }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(taget_os, values(\\\"netbsd\\\"))\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a config with a similar name and value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m455\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      ta\u001b[0m\u001b[0m\u001b[38;5;10mr\u001b[0m\u001b[0mget_os = \"netbsd\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":40551,"byte_end":40554,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    try!(Errno::result(res));","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs:1036:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1036\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    try!(Errno::result(res));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":6633,"byte_end":6636,"line_start":182,"line_end":182,"column_start":39,"column_end":42,"is_primary":true,"text":[{"text":"            WaitStatus::Signaled(pid, try!(term_signal(status)), dumped_core(status))","highlight_start":39,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:182:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            WaitStatus::Signaled(pid, try!(term_signal(status)), dumped_core(status))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":7198,"byte_end":7201,"line_start":191,"line_end":191,"column_start":54,"column_end":57,"is_primary":true,"text":[{"text":"                            WaitStatus::Stopped(pid, try!(stop_signal(status)))","highlight_start":54,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:191:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   WaitStatus::Stopped(pid, try!(stop_signal(status)))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":7315,"byte_end":7318,"line_start":193,"line_end":193,"column_start":58,"column_end":61,"is_primary":true,"text":[{"text":"                            WaitStatus::PtraceEvent(pid, try!(stop_signal(status)), stop_additional(status))","highlight_start":58,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:193:58\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   WaitStatus::PtraceEvent(pid, try!(stop_signal(status)), stop_additional(status))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":8281,"byte_end":8284,"line_start":228,"line_end":228,"column_start":11,"column_end":14,"is_primary":true,"text":[{"text":"    match try!(Errno::result(res)) {","highlight_start":11,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:228:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match try!(Errno::result(res)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/mman.rs","byte_start":10110,"byte_end":10113,"line_start":238,"line_end":238,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let ret = try!(name.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/mman.rs:238:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let ret = try!(name.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/mman.rs","byte_start":10640,"byte_end":10643,"line_start":254,"line_end":254,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let ret = try!(name.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/mman.rs:254:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let ret = try!(name.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":6252,"byte_end":6255,"line_start":237,"line_end":237,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        try!(write!(f, \"{}\", sign));","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:237:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        try!(write!(f, \"{}\", sign));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":6365,"byte_end":6368,"line_start":241,"line_end":241,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"                try!(write!(f, \"{} second\", sec));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:241:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                try!(write!(f, \"{} second\", sec));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":6437,"byte_end":6440,"line_start":243,"line_end":243,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"                try!(write!(f, \"{} seconds\", sec));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:243:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                try!(write!(f, \"{} seconds\", sec));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":6550,"byte_end":6553,"line_start":246,"line_end":246,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"            try!(write!(f, \"{}.{:03} seconds\", sec, abs.tv_nsec() / 1_000_000));","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:246:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            try!(write!(f, \"{}.{:03} seconds\", sec, abs.tv_nsec() / 1_000_000));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":6678,"byte_end":6681,"line_start":248,"line_end":248,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"            try!(write!(f, \"{}.{:06} seconds\", sec, abs.tv_nsec() / 1_000));","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:248:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            try!(write!(f, \"{}.{:06} seconds\", sec, abs.tv_nsec() / 1_000));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":6772,"byte_end":6775,"line_start":250,"line_end":250,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"            try!(write!(f, \"{}.{:09} seconds\", sec, abs.tv_nsec()));","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:250:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            try!(write!(f, \"{}.{:09} seconds\", sec, abs.tv_nsec()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":12133,"byte_end":12136,"line_start":451,"line_end":451,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        try!(write!(f, \"{}\", sign));","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:451:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        try!(write!(f, \"{}\", sign));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":12246,"byte_end":12249,"line_start":455,"line_end":455,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"                try!(write!(f, \"{} second\", sec));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:455:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m455\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                try!(write!(f, \"{} second\", sec));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":12318,"byte_end":12321,"line_start":457,"line_end":457,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"                try!(write!(f, \"{} seconds\", sec));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:457:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m457\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                try!(write!(f, \"{} seconds\", sec));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":12426,"byte_end":12429,"line_start":460,"line_end":460,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"            try!(write!(f, \"{}.{:03} seconds\", sec, abs.tv_usec() / 1000));","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:460:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            try!(write!(f, \"{}.{:03} seconds\", sec, abs.tv_usec() / 1000));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs","byte_start":12519,"byte_end":12522,"line_start":462,"line_end":462,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"            try!(write!(f, \"{}.{:06} seconds\", sec, abs.tv_usec()));","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/time.rs:462:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m462\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            try!(write!(f, \"{}.{:06} seconds\", sec, abs.tv_usec()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unexpected `cfg` condition name: `arch`","code":{"code":"unexpected_cfgs","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/ptrace.rs","byte_start":279,"byte_end":293,"line_start":12,"line_end":12,"column_start":43,"column_end":57,"is_primary":true,"text":[{"text":"    if #[cfg(any(all(target_os = \"linux\", arch = \"s390x\"),","highlight_start":43,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected names are: `docsrs`, `feature`, and `test` and 31 more","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider using a Cargo feature instead","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n [lints.rust]\n unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(arch, values(\"s390x\"))'] }","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or consider adding `println!(\"cargo::rustc-check-cfg=cfg(arch, values(\\\"s390x\\\"))\");` to the top of the `build.rs`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unexpected `cfg` condition name: `arch`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/ptrace.rs:12:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if #[cfg(any(all(target_os = \"linux\", arch = \"s390x\"),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: expected names are: `docsrs`, `feature`, and `test` and 31 more\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a Cargo feature instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\u001b[0m\n\u001b[0m            [lints.rust]\u001b[0m\n\u001b[0m            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(arch, values(\"s390x\"))'] }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(arch, values(\\\"s390x\\\"))\");` to the top of the `build.rs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs","byte_start":6833,"byte_end":6836,"line_start":236,"line_end":236,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"        let res = try!(","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs:236:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let res = try!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs","byte_start":7299,"byte_end":7302,"line_start":249,"line_end":249,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    try!(quota_file.with_nix_path(|path| {","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs:249:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    try!(quota_file.with_nix_path(|path| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statfs.rs","byte_start":225,"byte_end":228,"line_start":9,"line_end":9,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"        let res = try!(","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statfs.rs:9:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let res = try!(\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs","byte_start":3864,"byte_end":3867,"line_start":127,"line_end":127,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"        let res = try!(","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs:127:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let res = try!(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":11423,"byte_end":11426,"line_start":361,"line_end":361,"column_start":14,"column_end":17,"is_primary":true,"text":[{"text":"    let fd = try!(dup2(oldfd, newfd));","highlight_start":14,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:361:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m361\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let fd = try!(dup2(oldfd, newfd));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":12026,"byte_end":12029,"line_start":380,"line_end":380,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:380:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":13737,"byte_end":13740,"line_start":433,"line_end":433,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:433:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m433\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":15061,"byte_end":15064,"line_start":476,"line_end":476,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:476:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m476\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":17480,"byte_end":17483,"line_start":543,"line_end":543,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:543:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m543\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":30735,"byte_end":30738,"line_start":877,"line_end":877,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        try!(Errno::result(res));","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:877:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m877\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":31624,"byte_end":31627,"line_start":904,"line_end":904,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    try!(Errno::result(res));","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:904:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m904\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    try!(Errno::result(res));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":34121,"byte_end":34124,"line_start":991,"line_end":991,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:991:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m991\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":34351,"byte_end":34354,"line_start":1001,"line_end":1001,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let res = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:1001:15\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1001\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let res = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":47184,"byte_end":47187,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    try!(Errno::result(fd));","highlight_start":5,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:1368:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1368\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    try!(Errno::result(fd));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":46884,"byte_end":46887,"line_start":1362,"line_end":1362,"column_start":20,"column_end":23,"is_primary":true,"text":[{"text":"    let mut path = try!(template.with_nix_path(|path| {path.to_bytes_with_nul().to_owned()}));","highlight_start":20,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:1362:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1362\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut path = try!(template.with_nix_path(|path| {path.to_bytes_with_nul().to_owned()}));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":55361,"byte_end":55364,"line_start":1529,"line_end":1529,"column_start":15,"column_end":18,"is_primary":true,"text":[{"text":"    let raw = try!(path.with_nix_path(|cstr| {","highlight_start":15,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:1529:15\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1529\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let raw = try!(path.with_nix_path(|cstr| {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":81170,"byte_end":81173,"line_start":1996,"line_end":1996,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"        let res = try!(try!(new_root.with_nix_path(|new_root| {","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:1996:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1996\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let res = try!(try!(new_root.with_nix_path(|new_root| {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":81175,"byte_end":81178,"line_start":1996,"line_end":1996,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"        let res = try!(try!(new_root.with_nix_path(|new_root| {","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:1996:24\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1996\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let res = try!(try!(new_root.with_nix_path(|new_root| {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":3931,"byte_end":3944,"line_start":134,"line_end":134,"column_start":34,"column_end":47,"is_primary":true,"text":[{"text":"    let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };","highlight_start":34,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs:134:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":4552,"byte_end":4565,"line_start":145,"line_end":145,"column_start":34,"column_end":47,"is_primary":true,"text":[{"text":"    let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };","highlight_start":34,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs:145:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":1229,"byte_end":1242,"line_start":53,"line_end":53,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"        let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs:53:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/pty.rs","byte_start":6956,"byte_end":6969,"line_start":206,"line_end":206,"column_start":48,"column_end":61,"is_primary":true,"text":[{"text":"    let mut slave: libc::c_int = unsafe { mem::uninitialized() };","highlight_start":48,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/pty.rs:206:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut slave: libc::c_int = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/pty.rs","byte_start":7023,"byte_end":7036,"line_start":207,"line_end":207,"column_start":49,"column_end":62,"is_primary":true,"text":[{"text":"    let mut master: libc::c_int = unsafe { mem::uninitialized() };","highlight_start":49,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/pty.rs:207:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut master: libc::c_int = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/ifaddrs.rs","byte_start":4285,"byte_end":4298,"line_start":128,"line_end":128,"column_start":55,"column_end":68,"is_primary":true,"text":[{"text":"    let mut addrs: *mut libc::ifaddrs = unsafe { mem::uninitialized() };","highlight_start":55,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/ifaddrs.rs:128:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut addrs: *mut libc::ifaddrs = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":10810,"byte_end":10823,"line_start":406,"line_end":406,"column_start":27,"column_end":40,"is_primary":true,"text":[{"text":"    let mut oldact = mem::uninitialized::<libc::sigaction>();","highlight_start":27,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:406:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m406\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut oldact = mem::uninitialized::<libc::sigaction>();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":5828,"byte_end":5841,"line_start":265,"line_end":265,"column_start":56,"column_end":69,"is_primary":true,"text":[{"text":"        let mut sigset: libc::sigset_t = unsafe { mem::uninitialized() };","highlight_start":56,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:265:56\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut sigset: libc::sigset_t = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":6056,"byte_end":6069,"line_start":272,"line_end":272,"column_start":56,"column_end":69,"is_primary":true,"text":[{"text":"        let mut sigset: libc::sigset_t = unsafe { mem::uninitialized() };","highlight_start":56,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:272:56\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut sigset: libc::sigset_t = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":7311,"byte_end":7324,"line_start":310,"line_end":310,"column_start":49,"column_end":62,"is_primary":true,"text":[{"text":"        let mut oldmask: SigSet = unsafe { mem::uninitialized() };","highlight_start":49,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:310:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut oldmask: SigSet = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":8233,"byte_end":8246,"line_start":332,"line_end":332,"column_start":49,"column_end":62,"is_primary":true,"text":[{"text":"        let mut oldmask: SigSet = unsafe { mem::uninitialized() };","highlight_start":49,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:332:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut oldmask: SigSet = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":8593,"byte_end":8606,"line_start":340,"line_end":340,"column_start":53,"column_end":66,"is_primary":true,"text":[{"text":"        let mut signum: libc::c_int = unsafe { mem::uninitialized() };","highlight_start":53,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:340:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut signum: libc::c_int = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9440,"byte_end":9453,"line_start":370,"line_end":370,"column_start":35,"column_end":48,"is_primary":true,"text":[{"text":"        let mut s = unsafe { mem::uninitialized::<libc::sigaction>() };","highlight_start":35,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:370:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m370\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut s = unsafe { mem::uninitialized::<libc::sigaction>() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signalfd.rs","byte_start":3688,"byte_end":3701,"line_start":101,"line_end":101,"column_start":69,"column_end":82,"is_primary":true,"text":[{"text":"        let mut buffer: [u8; SIGNALFD_SIGINFO_SIZE] = unsafe { mem::uninitialized() };","highlight_start":69,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signalfd.rs:101:69\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut buffer: [u8; SIGNALFD_SIGINFO_SIZE] = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":23536,"byte_end":23549,"line_start":626,"line_end":626,"column_start":37,"column_end":50,"is_primary":true,"text":[{"text":"        let mut mhdr: msghdr = mem::uninitialized();","highlight_start":37,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:626:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m626\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut mhdr: msghdr = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":24371,"byte_end":24384,"line_start":645,"line_end":645,"column_start":55,"column_end":68,"is_primary":true,"text":[{"text":"    let mut address: sockaddr_storage = unsafe { mem::uninitialized() };","highlight_start":55,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:645:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m645\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut address: sockaddr_storage = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":24644,"byte_end":24657,"line_start":651,"line_end":651,"column_start":37,"column_end":50,"is_primary":true,"text":[{"text":"        let mut mhdr: msghdr = mem::uninitialized();","highlight_start":37,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:651:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m651\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut mhdr: msghdr = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":35793,"byte_end":35806,"line_start":992,"line_end":992,"column_start":43,"column_end":56,"is_primary":true,"text":[{"text":"        let addr: sockaddr_storage = mem::uninitialized();","highlight_start":43,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:992:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m992\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let addr: sockaddr_storage = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":36327,"byte_end":36340,"line_start":1008,"line_end":1008,"column_start":43,"column_end":56,"is_primary":true,"text":[{"text":"        let addr: sockaddr_storage = mem::uninitialized();","highlight_start":43,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:1008:43\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1008\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let addr: sockaddr_storage = mem::uninitialized();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":12204,"byte_end":12217,"line_start":334,"line_end":334,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"        unsafe { mem::uninitialized() }","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:334:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { mem::uninitialized() }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":20926,"byte_end":20939,"line_start":546,"line_end":546,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"                    ..mem::uninitialized()","highlight_start":28,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:546:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m546\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    ..mem::uninitialized()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":21647,"byte_end":21660,"line_start":565,"line_end":565,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"                    ..mem::uninitialized()","highlight_start":28,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:565:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m565\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    ..mem::uninitialized()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs","byte_start":18041,"byte_end":18054,"line_start":547,"line_end":547,"column_start":60,"column_end":73,"is_primary":true,"text":[{"text":"        let mut in6_addr_var: libc::in6_addr = unsafe{mem::uninitialized()};","highlight_start":60,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs:547:60\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m547\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut in6_addr_var: libc::in6_addr = unsafe{mem::uninitialized()};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated type alias `libc::uint8_t`: Use u8 instead.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":115,"byte_end":122,"line_start":5,"line_end":5,"column_start":25,"column_end":32,"is_primary":true,"text":[{"text":"use libc::{self, c_int, uint8_t, c_void, socklen_t};","highlight_start":25,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `libc::uint8_t`: Use u8 instead.\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:5:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse libc::{self, c_int, uint8_t, c_void, socklen_t};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated type alias `libc::uint8_t`: Use u8 instead.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":10173,"byte_end":10180,"line_start":300,"line_end":300,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"    val: uint8_t,","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `libc::uint8_t`: Use u8 instead.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:300:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    val: uint8_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated type alias `libc::uint8_t`: Use u8 instead.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":10742,"byte_end":10749,"line_start":326,"line_end":326,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"    val: uint8_t,","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `libc::uint8_t`: Use u8 instead.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:326:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m326\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    val: uint8_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated type alias `libc::uint8_t`: Use u8 instead.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":10297,"byte_end":10304,"line_start":306,"line_end":306,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"            len: mem::size_of::<uint8_t>() as socklen_t,","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `libc::uint8_t`: Use u8 instead.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:306:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            len: mem::size_of::<uint8_t>() as socklen_t,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated type alias `libc::uint8_t`: Use u8 instead.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":10444,"byte_end":10451,"line_start":312,"line_end":312,"column_start":31,"column_end":38,"is_primary":true,"text":[{"text":"        &mut self.val as *mut uint8_t as *mut c_void","highlight_start":31,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `libc::uint8_t`: Use u8 instead.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:312:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &mut self.val as *mut uint8_t as *mut c_void\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated type alias `libc::uint8_t`: Use u8 instead.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":10636,"byte_end":10643,"line_start":320,"line_end":320,"column_start":53,"column_end":60,"is_primary":true,"text":[{"text":"        assert!(self.len as usize == mem::size_of::<uint8_t>(), \"invalid getsockopt implementation\");","highlight_start":53,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `libc::uint8_t`: Use u8 instead.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:320:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m320\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert!(self.len as usize == mem::size_of::<uint8_t>(), \"invalid getsockopt implementation\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated type alias `libc::uint8_t`: Use u8 instead.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":10858,"byte_end":10865,"line_start":331,"line_end":331,"column_start":30,"column_end":37,"is_primary":true,"text":[{"text":"        SetU8 { val: *val as uint8_t }","highlight_start":30,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `libc::uint8_t`: Use u8 instead.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:331:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        SetU8 { val: *val as uint8_t }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated type alias `libc::uint8_t`: Use u8 instead.","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs","byte_start":10944,"byte_end":10951,"line_start":335,"line_end":335,"column_start":29,"column_end":36,"is_primary":true,"text":[{"text":"        &self.val as *const uint8_t as *const c_void","highlight_start":29,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated type alias `libc::uint8_t`: Use u8 instead.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/sockopt.rs:335:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &self.val as *const uint8_t as *const c_void\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":1761,"byte_end":1774,"line_start":80,"line_end":80,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:80:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut dst = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2073,"byte_end":2086,"line_start":93,"line_end":93,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:93:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut dst = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2366,"byte_end":2379,"line_start":106,"line_end":106,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:106:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut dst = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2631,"byte_end":2644,"line_start":115,"line_end":115,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:115:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut dst = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":40466,"byte_end":40479,"line_start":1032,"line_end":1032,"column_start":52,"column_end":65,"is_primary":true,"text":[{"text":"    let mut termios: libc::termios = unsafe { mem::uninitialized() };","highlight_start":52,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs:1032:52\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1032\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut termios: libc::termios = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":11606,"byte_end":11619,"line_start":253,"line_end":253,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"            inner: RefCell::new(mem::uninitialized()),","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs:253:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            inner: RefCell::new(mem::uninitialized()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/utsname.rs","byte_start":862,"byte_end":875,"line_start":34,"line_end":34,"column_start":37,"column_end":50,"is_primary":true,"text":[{"text":"        let mut ret: UtsName = mem::uninitialized();","highlight_start":37,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/utsname.rs:34:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut ret: UtsName = mem::uninitialized();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/ptrace.rs","byte_start":6735,"byte_end":6748,"line_start":159,"line_end":159,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"    let data: T = unsafe { mem::uninitialized() };","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/ptrace.rs:159:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let data: T = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/select.rs","byte_start":353,"byte_end":366,"line_start":17,"line_end":17,"column_start":39,"column_end":52,"is_primary":true,"text":[{"text":"        let mut fdset = unsafe { mem::uninitialized() };","highlight_start":39,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/select.rs:17:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut fdset = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs","byte_start":8251,"byte_end":8264,"line_start":268,"line_end":268,"column_start":35,"column_end":48,"is_primary":true,"text":[{"text":"    let mut dqblk = unsafe { mem::uninitialized() };","highlight_start":35,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs:268:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut dqblk = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs","byte_start":3829,"byte_end":3842,"line_start":126,"line_end":126,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"        let mut stat: Statvfs = mem::uninitialized();","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs:126:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut stat: Statvfs = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs","byte_start":4202,"byte_end":4215,"line_start":139,"line_end":139,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"        let mut stat: Statvfs = mem::uninitialized();","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs:139:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut stat: Statvfs = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/ucontext.rs","byte_start":375,"byte_end":388,"line_start":17,"line_end":17,"column_start":59,"column_end":72,"is_primary":true,"text":[{"text":"        let mut context: libc::ucontext_t = unsafe { mem::uninitialized() };","highlight_start":59,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/ucontext.rs:17:59\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut context: libc::ucontext_t = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":30660,"byte_end":30673,"line_start":873,"line_end":873,"column_start":40,"column_end":53,"is_primary":true,"text":[{"text":"        let mut fds: [c_int; 2] = mem::uninitialized();","highlight_start":40,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:873:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m873\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut fds: [c_int; 2] = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":31529,"byte_end":31542,"line_start":900,"line_end":900,"column_start":45,"column_end":58,"is_primary":true,"text":[{"text":"    let mut fds: [c_int; 2] = unsafe { mem::uninitialized() };","highlight_start":45,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated function `std::mem::uninitialized`: use `mem::MaybeUninit` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:900:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m900\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut fds: [c_int; 2] = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sched.rs","byte_start":890,"byte_end":911,"line_start":39,"line_end":39,"column_start":28,"column_end":49,"is_primary":true,"text":[{"text":"pub type CloneCb<'a> = Box<FnMut() -> isize + 'a>;","highlight_start":28,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(bare_trait_objects)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sched.rs","byte_start":890,"byte_end":890,"line_start":39,"line_end":39,"column_start":28,"column_end":28,"is_primary":true,"text":[{"text":"pub type CloneCb<'a> = Box<FnMut() -> isize + 'a>;","highlight_start":28,"highlight_end":28}],"label":null,"suggested_replacement":"dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sched.rs:39:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type CloneCb<'a> = Box<FnMut() -> isize + 'a>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(bare_trait_objects)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub type CloneCb<'a> = Box<\u001b[0m\u001b[0m\u001b[38;5;10mdyn \u001b[0m\u001b[0mFnMut() -> isize + 'a>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sched.rs","byte_start":2785,"byte_end":2813,"line_start":101,"line_end":101,"column_start":71,"column_end":99,"is_primary":true,"text":[{"text":"        libc::clone(mem::transmute(callback as extern \"C\" fn(*mut Box<::std::ops::FnMut() -> isize>) -> i32),","highlight_start":71,"highlight_end":99}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/edition-guide/rust-2021/warnings-promoted-to-error.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is a dyn-compatible trait, use `dyn`","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sched.rs","byte_start":2785,"byte_end":2785,"line_start":101,"line_end":101,"column_start":71,"column_end":71,"is_primary":true,"text":[{"text":"        libc::clone(mem::transmute(callback as extern \"C\" fn(*mut Box<::std::ops::FnMut() -> isize>) -> i32),","highlight_start":71,"highlight_end":71}],"label":null,"suggested_replacement":"dyn (","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sched.rs","byte_start":2813,"byte_end":2813,"line_start":101,"line_end":101,"column_start":99,"column_end":99,"is_primary":true,"text":[{"text":"        libc::clone(mem::transmute(callback as extern \"C\" fn(*mut Box<::std::ops::FnMut() -> isize>) -> i32),","highlight_start":99,"highlight_end":99}],"label":null,"suggested_replacement":")","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sched.rs:101:71\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        libc::clone(mem::transmute(callback as extern \"C\" fn(*mut Box<::std::ops::FnMut() -> isize>) -> i32),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/edition-guide/rust-2021/warnings-promoted-to-error.html>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: if this is a dyn-compatible trait, use `dyn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        libc::clone(mem::transmute(callback as extern \"C\" fn(*mut Box<\u001b[0m\u001b[0m\u001b[38;5;10mdyn (\u001b[0m\u001b[0m::std::ops::FnMut() -> isize\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m>) -> i32),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":4709,"byte_end":4715,"line_start":117,"line_end":117,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    unsafe { libc::WIFEXITED(status) }","highlight_start":5,"highlight_end":11}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_unsafe)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:117:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe { libc::WIFEXITED(status) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_unsafe)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":4788,"byte_end":4794,"line_start":121,"line_end":121,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    unsafe { libc::WEXITSTATUS(status) }","highlight_start":5,"highlight_end":11}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:121:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe { libc::WEXITSTATUS(status) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":4867,"byte_end":4873,"line_start":125,"line_end":125,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    unsafe { libc::WIFSIGNALED(status) }","highlight_start":5,"highlight_end":11}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:125:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe { libc::WIFSIGNALED(status) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":4978,"byte_end":4984,"line_start":129,"line_end":129,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    Signal::from_c_int(unsafe { libc::WTERMSIG(status) })","highlight_start":24,"highlight_end":30}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:129:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Signal::from_c_int(unsafe { libc::WTERMSIG(status) })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":5058,"byte_end":5064,"line_start":133,"line_end":133,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    unsafe { libc::WCOREDUMP(status) }","highlight_start":5,"highlight_end":11}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:133:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe { libc::WCOREDUMP(status) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":5134,"byte_end":5140,"line_start":137,"line_end":137,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    unsafe { libc::WIFSTOPPED(status) }","highlight_start":5,"highlight_end":11}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:137:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe { libc::WIFSTOPPED(status) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":5244,"byte_end":5250,"line_start":141,"line_end":141,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"    Signal::from_c_int(unsafe { libc::WSTOPSIG(status) })","highlight_start":24,"highlight_end":30}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:141:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Signal::from_c_int(unsafe { libc::WSTOPSIG(status) })\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":5561,"byte_end":5567,"line_start":149,"line_end":149,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    unsafe { libc::WSTOPSIG(status) == libc::SIGTRAP | 0x80 }","highlight_start":5,"highlight_end":11}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:149:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe { libc::WSTOPSIG(status) == libc::SIGTRAP | 0x80 }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs","byte_start":5736,"byte_end":5742,"line_start":157,"line_end":157,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    unsafe { libc::WIFCONTINUED(status) }","highlight_start":5,"highlight_end":11}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/wait.rs:157:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe { libc::WIFCONTINUED(status) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unnecessary `unsafe` block","code":{"code":"unused_unsafe","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs","byte_start":785,"byte_end":791,"line_start":25,"line_end":25,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        unsafe { libc::QCMD(self.0 as i32, self.1 as i32) }","highlight_start":9,"highlight_end":15}],"label":"unnecessary `unsafe` block","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `unsafe` block\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs:25:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { libc::QCMD(self.0 as i32, self.1 as i32) }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munnecessary `unsafe` block\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `mq_attr` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":1224,"byte_end":1261,"line_start":53,"line_end":53,"column_start":33,"column_end":70,"is_primary":true,"text":[{"text":"        let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };","highlight_start":33,"highlight_end":70}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":1224,"byte_end":1261,"line_start":53,"line_end":53,"column_start":33,"column_end":70,"is_primary":true,"text":[{"text":"        let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };","highlight_start":33,"highlight_end":70}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(invalid_value)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `mq_attr` does not permit being left uninitialized\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs:53:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(invalid_value)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `mq_attr` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":3926,"byte_end":3963,"line_start":134,"line_end":134,"column_start":29,"column_end":66,"is_primary":true,"text":[{"text":"    let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };","highlight_start":29,"highlight_end":66}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":3926,"byte_end":3963,"line_start":134,"line_end":134,"column_start":29,"column_end":66,"is_primary":true,"text":[{"text":"    let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };","highlight_start":29,"highlight_end":66}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `mq_attr` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs:134:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `mq_attr` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":4547,"byte_end":4584,"line_start":145,"line_end":145,"column_start":29,"column_end":66,"is_primary":true,"text":[{"text":"    let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };","highlight_start":29,"highlight_end":66}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs","byte_start":4547,"byte_end":4584,"line_start":145,"line_end":145,"column_start":29,"column_end":66,"is_primary":true,"text":[{"text":"    let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };","highlight_start":29,"highlight_end":66}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `mq_attr` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/mqueue.rs:145:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut attr = unsafe { mem::uninitialized::<libc::mq_attr>() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `i32` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/pty.rs","byte_start":6951,"byte_end":6971,"line_start":206,"line_end":206,"column_start":43,"column_end":63,"is_primary":true,"text":[{"text":"    let mut slave: libc::c_int = unsafe { mem::uninitialized() };","highlight_start":43,"highlight_end":63}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/pty.rs","byte_start":6951,"byte_end":6971,"line_start":206,"line_end":206,"column_start":43,"column_end":63,"is_primary":true,"text":[{"text":"    let mut slave: libc::c_int = unsafe { mem::uninitialized() };","highlight_start":43,"highlight_end":63}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `i32` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/pty.rs:206:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut slave: libc::c_int = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `i32` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/pty.rs","byte_start":7018,"byte_end":7038,"line_start":207,"line_end":207,"column_start":44,"column_end":64,"is_primary":true,"text":[{"text":"    let mut master: libc::c_int = unsafe { mem::uninitialized() };","highlight_start":44,"highlight_end":64}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/pty.rs","byte_start":7018,"byte_end":7038,"line_start":207,"line_end":207,"column_start":44,"column_end":64,"is_primary":true,"text":[{"text":"    let mut master: libc::c_int = unsafe { mem::uninitialized() };","highlight_start":44,"highlight_end":64}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `i32` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/pty.rs:207:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut master: libc::c_int = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `*mut libc::ifaddrs` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/ifaddrs.rs","byte_start":4280,"byte_end":4300,"line_start":128,"line_end":128,"column_start":50,"column_end":70,"is_primary":true,"text":[{"text":"    let mut addrs: *mut libc::ifaddrs = unsafe { mem::uninitialized() };","highlight_start":50,"highlight_end":70}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/ifaddrs.rs","byte_start":4280,"byte_end":4300,"line_start":128,"line_end":128,"column_start":50,"column_end":70,"is_primary":true,"text":[{"text":"    let mut addrs: *mut libc::ifaddrs = unsafe { mem::uninitialized() };","highlight_start":50,"highlight_end":70}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"raw pointers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `*mut libc::ifaddrs` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/ifaddrs.rs:128:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut addrs: *mut libc::ifaddrs = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: raw pointers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"hiding a lifetime that's named elsewhere is confusing","code":{"code":"mismatched_lifetime_syntaxes","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/aio.rs","byte_start":22628,"byte_end":22630,"line_start":605,"line_end":605,"column_start":53,"column_end":55,"is_primary":true,"text":[{"text":"    pub fn from_slice(fd: RawFd, offs: off_t, buf: &'a [u8],","highlight_start":53,"highlight_end":55}],"label":"the lifetime is named here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/aio.rs","byte_start":22749,"byte_end":22754,"line_start":607,"line_end":607,"column_start":45,"column_end":50,"is_primary":false,"text":[{"text":"                      opcode: LioOpcode) -> AioCb {","highlight_start":45,"highlight_end":50}],"label":"the same lifetime is hidden here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the same lifetime is referred to in inconsistent ways, making the signature confusing","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(mismatched_lifetime_syntaxes)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consistently use `'a`","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/aio.rs","byte_start":22754,"byte_end":22754,"line_start":607,"line_end":607,"column_start":50,"column_end":50,"is_primary":true,"text":[{"text":"                      opcode: LioOpcode) -> AioCb {","highlight_start":50,"highlight_end":50}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"remove the lifetime name from references and use `'_` for type paths","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/aio.rs","byte_start":22628,"byte_end":22631,"line_start":605,"line_end":605,"column_start":53,"column_end":56,"is_primary":true,"text":[{"text":"    pub fn from_slice(fd: RawFd, offs: off_t, buf: &'a [u8],","highlight_start":53,"highlight_end":56}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/aio.rs","byte_start":22754,"byte_end":22754,"line_start":607,"line_end":607,"column_start":50,"column_end":50,"is_primary":true,"text":[{"text":"                      opcode: LioOpcode) -> AioCb {","highlight_start":50,"highlight_end":50}],"label":null,"suggested_replacement":"<'_>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consistently use `'_`","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/aio.rs","byte_start":22628,"byte_end":22630,"line_start":605,"line_end":605,"column_start":53,"column_end":55,"is_primary":true,"text":[{"text":"    pub fn from_slice(fd: RawFd, offs: off_t, buf: &'a [u8],","highlight_start":53,"highlight_end":55}],"label":null,"suggested_replacement":"'_","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/aio.rs","byte_start":22754,"byte_end":22754,"line_start":607,"line_end":607,"column_start":50,"column_end":50,"is_primary":true,"text":[{"text":"                      opcode: LioOpcode) -> AioCb {","highlight_start":50,"highlight_end":50}],"label":null,"suggested_replacement":"<'_>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: hiding a lifetime that's named elsewhere is confusing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/aio.rs:605:53\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m605\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn from_slice(fd: RawFd, offs: off_t, buf: &'a [u8],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe lifetime is named here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m606\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                      prio: libc::c_int, sigev_notify: SigevNotify,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                      opcode: LioOpcode) -> AioCb {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe same lifetime is hidden here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the same lifetime is referred to in inconsistent ways, making the signature confusing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(mismatched_lifetime_syntaxes)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consistently use `'a`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      opcode: LioOpcode) -> AioCb\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `sigset_t` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":5823,"byte_end":5843,"line_start":265,"line_end":265,"column_start":51,"column_end":71,"is_primary":true,"text":[{"text":"        let mut sigset: libc::sigset_t = unsafe { mem::uninitialized() };","highlight_start":51,"highlight_end":71}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":5823,"byte_end":5843,"line_start":265,"line_end":265,"column_start":51,"column_end":71,"is_primary":true,"text":[{"text":"        let mut sigset: libc::sigset_t = unsafe { mem::uninitialized() };","highlight_start":51,"highlight_end":71}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `sigset_t` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:265:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut sigset: libc::sigset_t = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `sigset_t` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":6051,"byte_end":6071,"line_start":272,"line_end":272,"column_start":51,"column_end":71,"is_primary":true,"text":[{"text":"        let mut sigset: libc::sigset_t = unsafe { mem::uninitialized() };","highlight_start":51,"highlight_end":71}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":6051,"byte_end":6071,"line_start":272,"line_end":272,"column_start":51,"column_end":71,"is_primary":true,"text":[{"text":"        let mut sigset: libc::sigset_t = unsafe { mem::uninitialized() };","highlight_start":51,"highlight_end":71}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `sigset_t` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:272:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut sigset: libc::sigset_t = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `SigSet` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":7306,"byte_end":7326,"line_start":310,"line_end":310,"column_start":44,"column_end":64,"is_primary":true,"text":[{"text":"        let mut oldmask: SigSet = unsafe { mem::uninitialized() };","highlight_start":44,"highlight_end":64}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":7306,"byte_end":7326,"line_start":310,"line_end":310,"column_start":44,"column_end":64,"is_primary":true,"text":[{"text":"        let mut oldmask: SigSet = unsafe { mem::uninitialized() };","highlight_start":44,"highlight_end":64}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized (in this struct field)","code":null,"level":"note","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":5703,"byte_end":5725,"line_start":259,"line_end":259,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    sigset: libc::sigset_t","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `SigSet` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:310:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut oldmask: SigSet = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: integers must be initialized (in this struct field)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:259:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    sigset: libc::sigset_t\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `SigSet` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":8228,"byte_end":8248,"line_start":332,"line_end":332,"column_start":44,"column_end":64,"is_primary":true,"text":[{"text":"        let mut oldmask: SigSet = unsafe { mem::uninitialized() };","highlight_start":44,"highlight_end":64}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":8228,"byte_end":8248,"line_start":332,"line_end":332,"column_start":44,"column_end":64,"is_primary":true,"text":[{"text":"        let mut oldmask: SigSet = unsafe { mem::uninitialized() };","highlight_start":44,"highlight_end":64}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized (in this struct field)","code":null,"level":"note","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":5703,"byte_end":5725,"line_start":259,"line_end":259,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    sigset: libc::sigset_t","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `SigSet` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:332:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut oldmask: SigSet = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: integers must be initialized (in this struct field)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:259:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    sigset: libc::sigset_t\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `i32` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":8588,"byte_end":8608,"line_start":340,"line_end":340,"column_start":48,"column_end":68,"is_primary":true,"text":[{"text":"        let mut signum: libc::c_int = unsafe { mem::uninitialized() };","highlight_start":48,"highlight_end":68}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":8588,"byte_end":8608,"line_start":340,"line_end":340,"column_start":48,"column_end":68,"is_primary":true,"text":[{"text":"        let mut signum: libc::c_int = unsafe { mem::uninitialized() };","highlight_start":48,"highlight_end":68}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `i32` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:340:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut signum: libc::c_int = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function pointer comparisons do not produce meaningful results since their addresses are not guaranteed to be unique","code":{"code":"unpredictable_function_pointer_comparisons","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9025,"byte_end":9047,"line_start":358,"line_end":358,"column_start":13,"column_end":35,"is_primary":true,"text":[{"text":"    Handler(extern fn(libc::c_int)),","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":8955,"byte_end":8964,"line_start":354,"line_end":354,"column_start":30,"column_end":39,"is_primary":false,"text":[{"text":"#[derive(Debug, Clone, Copy, PartialEq)]","highlight_start":30,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(PartialEq)]","def_site_span":{"file_name":"/home/anon/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/cmp.rs","byte_start":10189,"byte_end":10208,"line_start":275,"line_end":275,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub macro PartialEq($item:item) {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the address of the same function can vary between different codegen units","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"furthermore, different functions could have the same address after being merged together","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for more information visit <https://doc.rust-lang.org/nightly/core/ptr/fn.fn_addr_eq.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unpredictable_function_pointer_comparisons)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function pointer comparisons do not produce meaningful results since their addresses are not guaranteed to be unique\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:358:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Debug, Clone, Copy, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this derive macro expansion\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Handler(extern fn(libc::c_int)),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the address of the same function can vary between different codegen units\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: furthermore, different functions could have the same address after being merged together\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information visit <https://doc.rust-lang.org/nightly/core/ptr/fn.fn_addr_eq.html>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unpredictable_function_pointer_comparisons)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function pointer comparisons do not produce meaningful results since their addresses are not guaranteed to be unique","code":{"code":"unpredictable_function_pointer_comparisons","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9064,"byte_end":9127,"line_start":359,"line_end":359,"column_start":15,"column_end":78,"is_primary":true,"text":[{"text":"    SigAction(extern fn(libc::c_int, *mut libc::siginfo_t, *mut libc::c_void))","highlight_start":15,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":8955,"byte_end":8964,"line_start":354,"line_end":354,"column_start":30,"column_end":39,"is_primary":false,"text":[{"text":"#[derive(Debug, Clone, Copy, PartialEq)]","highlight_start":30,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(PartialEq)]","def_site_span":{"file_name":"/home/anon/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/cmp.rs","byte_start":10189,"byte_end":10208,"line_start":275,"line_end":275,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub macro PartialEq($item:item) {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the address of the same function can vary between different codegen units","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"furthermore, different functions could have the same address after being merged together","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for more information visit <https://doc.rust-lang.org/nightly/core/ptr/fn.fn_addr_eq.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function pointer comparisons do not produce meaningful results since their addresses are not guaranteed to be unique\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:359:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Debug, Clone, Copy, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this derive macro expansion\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m359\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SigAction(extern fn(libc::c_int, *mut libc::siginfo_t, *mut libc::c_void))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the address of the same function can vary between different codegen units\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: furthermore, different functions could have the same address after being merged together\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information visit <https://doc.rust-lang.org/nightly/core/ptr/fn.fn_addr_eq.html>\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `sigaction` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9435,"byte_end":9474,"line_start":370,"line_end":370,"column_start":30,"column_end":69,"is_primary":true,"text":[{"text":"        let mut s = unsafe { mem::uninitialized::<libc::sigaction>() };","highlight_start":30,"highlight_end":69}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":9435,"byte_end":9474,"line_start":370,"line_end":370,"column_start":30,"column_end":69,"is_primary":true,"text":[{"text":"        let mut s = unsafe { mem::uninitialized::<libc::sigaction>() };","highlight_start":30,"highlight_end":69}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `sigaction` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:370:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m370\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut s = unsafe { mem::uninitialized::<libc::sigaction>() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `sigaction` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":10805,"byte_end":10844,"line_start":406,"line_end":406,"column_start":22,"column_end":61,"is_primary":true,"text":[{"text":"    let mut oldact = mem::uninitialized::<libc::sigaction>();","highlight_start":22,"highlight_end":61}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs","byte_start":10805,"byte_end":10844,"line_start":406,"line_end":406,"column_start":22,"column_end":61,"is_primary":true,"text":[{"text":"    let mut oldact = mem::uninitialized::<libc::sigaction>();","highlight_start":22,"highlight_end":61}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `sigaction` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signal.rs:406:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m406\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut oldact = mem::uninitialized::<libc::sigaction>();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `[u8; 128]` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signalfd.rs","byte_start":3683,"byte_end":3703,"line_start":101,"line_end":101,"column_start":64,"column_end":84,"is_primary":true,"text":[{"text":"        let mut buffer: [u8; SIGNALFD_SIGINFO_SIZE] = unsafe { mem::uninitialized() };","highlight_start":64,"highlight_end":84}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signalfd.rs","byte_start":3683,"byte_end":3703,"line_start":101,"line_end":101,"column_start":64,"column_end":84,"is_primary":true,"text":[{"text":"        let mut buffer: [u8; SIGNALFD_SIGINFO_SIZE] = unsafe { mem::uninitialized() };","highlight_start":64,"highlight_end":84}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `[u8; 128]` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/signalfd.rs:101:64\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut buffer: [u8; SIGNALFD_SIGINFO_SIZE] = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `CmsgSpace<T>` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":12199,"byte_end":12219,"line_start":334,"line_end":334,"column_start":18,"column_end":38,"is_primary":true,"text":[{"text":"        unsafe { mem::uninitialized() }","highlight_start":18,"highlight_end":38}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized (in this struct field)","code":null,"level":"note","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":11890,"byte_end":11903,"line_start":324,"line_end":324,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    _hdr: cmsghdr,","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `CmsgSpace<T>` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:334:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { mem::uninitialized() }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: integers must be initialized (in this struct field)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:324:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m324\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    _hdr: cmsghdr,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"hiding a lifetime that's elided elsewhere is confusing","code":{"code":"mismatched_lifetime_syntaxes","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":12528,"byte_end":12533,"line_start":349,"line_end":349,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"    pub fn cmsgs(&self) -> CmsgIterator {","highlight_start":18,"highlight_end":23}],"label":"the lifetime is elided here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":12538,"byte_end":12550,"line_start":349,"line_end":349,"column_start":28,"column_end":40,"is_primary":false,"text":[{"text":"    pub fn cmsgs(&self) -> CmsgIterator {","highlight_start":28,"highlight_end":40}],"label":"the same lifetime is hidden here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the same lifetime is referred to in inconsistent ways, making the signature confusing","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"use `'_` for type paths","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":12550,"byte_end":12550,"line_start":349,"line_end":349,"column_start":40,"column_end":40,"is_primary":true,"text":[{"text":"    pub fn cmsgs(&self) -> CmsgIterator {","highlight_start":40,"highlight_end":40}],"label":null,"suggested_replacement":"<'_>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consistently use `'_`","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":12529,"byte_end":12529,"line_start":349,"line_end":349,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn cmsgs(&self) -> CmsgIterator {","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":"'_ ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":12550,"byte_end":12550,"line_start":349,"line_end":349,"column_start":40,"column_end":40,"is_primary":true,"text":[{"text":"    pub fn cmsgs(&self) -> CmsgIterator {","highlight_start":40,"highlight_end":40}],"label":null,"suggested_replacement":"<'_>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: hiding a lifetime that's elided elsewhere is confusing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:349:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn cmsgs(&self) -> CmsgIterator {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe same lifetime is hidden here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe lifetime is elided here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the same lifetime is referred to in inconsistent ways, making the signature confusing\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `'_` for type paths\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m349\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn cmsgs(&self) -> CmsgIterator\u001b[0m\u001b[0m\u001b[38;5;10m<'_>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `cmsghdr` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":20921,"byte_end":20941,"line_start":546,"line_end":546,"column_start":23,"column_end":43,"is_primary":true,"text":[{"text":"                    ..mem::uninitialized()","highlight_start":23,"highlight_end":43}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":20921,"byte_end":20941,"line_start":546,"line_end":546,"column_start":23,"column_end":43,"is_primary":true,"text":[{"text":"                    ..mem::uninitialized()","highlight_start":23,"highlight_end":43}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `cmsghdr` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:546:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m546\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    ..mem::uninitialized()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `cmsghdr` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":21642,"byte_end":21662,"line_start":565,"line_end":565,"column_start":23,"column_end":43,"is_primary":true,"text":[{"text":"                    ..mem::uninitialized()","highlight_start":23,"highlight_end":43}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":21642,"byte_end":21662,"line_start":565,"line_end":565,"column_start":23,"column_end":43,"is_primary":true,"text":[{"text":"                    ..mem::uninitialized()","highlight_start":23,"highlight_end":43}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `cmsghdr` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:565:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m565\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    ..mem::uninitialized()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `msghdr` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":23531,"byte_end":23551,"line_start":626,"line_end":626,"column_start":32,"column_end":52,"is_primary":true,"text":[{"text":"        let mut mhdr: msghdr = mem::uninitialized();","highlight_start":32,"highlight_end":52}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":23531,"byte_end":23551,"line_start":626,"line_end":626,"column_start":32,"column_end":52,"is_primary":true,"text":[{"text":"        let mut mhdr: msghdr = mem::uninitialized();","highlight_start":32,"highlight_end":52}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"raw pointers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `msghdr` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:626:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m626\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut mhdr: msghdr = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: raw pointers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `sockaddr_storage` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":24366,"byte_end":24386,"line_start":645,"line_end":645,"column_start":50,"column_end":70,"is_primary":true,"text":[{"text":"    let mut address: sockaddr_storage = unsafe { mem::uninitialized() };","highlight_start":50,"highlight_end":70}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":24366,"byte_end":24386,"line_start":645,"line_end":645,"column_start":50,"column_end":70,"is_primary":true,"text":[{"text":"    let mut address: sockaddr_storage = unsafe { mem::uninitialized() };","highlight_start":50,"highlight_end":70}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `sockaddr_storage` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:645:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m645\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut address: sockaddr_storage = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `msghdr` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":24639,"byte_end":24659,"line_start":651,"line_end":651,"column_start":32,"column_end":52,"is_primary":true,"text":[{"text":"        let mut mhdr: msghdr = mem::uninitialized();","highlight_start":32,"highlight_end":52}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":24639,"byte_end":24659,"line_start":651,"line_end":651,"column_start":32,"column_end":52,"is_primary":true,"text":[{"text":"        let mut mhdr: msghdr = mem::uninitialized();","highlight_start":32,"highlight_end":52}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"raw pointers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `msghdr` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:651:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m651\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut mhdr: msghdr = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: raw pointers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `sockaddr_storage` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":35788,"byte_end":35808,"line_start":992,"line_end":992,"column_start":38,"column_end":58,"is_primary":true,"text":[{"text":"        let addr: sockaddr_storage = mem::uninitialized();","highlight_start":38,"highlight_end":58}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":35788,"byte_end":35808,"line_start":992,"line_end":992,"column_start":38,"column_end":58,"is_primary":true,"text":[{"text":"        let addr: sockaddr_storage = mem::uninitialized();","highlight_start":38,"highlight_end":58}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `sockaddr_storage` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:992:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m992\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let addr: sockaddr_storage = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `sockaddr_storage` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":36322,"byte_end":36342,"line_start":1008,"line_end":1008,"column_start":38,"column_end":58,"is_primary":true,"text":[{"text":"        let addr: sockaddr_storage = mem::uninitialized();","highlight_start":38,"highlight_end":58}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":36322,"byte_end":36342,"line_start":1008,"line_end":1008,"column_start":38,"column_end":58,"is_primary":true,"text":[{"text":"        let addr: sockaddr_storage = mem::uninitialized();","highlight_start":38,"highlight_end":58}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `sockaddr_storage` does not permit being left uninitialized\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:1008:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1008\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let addr: sockaddr_storage = mem::uninitialized();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"dereferencing a null pointer","code":{"code":"deref_nullptr","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/macros.rs","byte_start":6303,"byte_end":6323,"line_start":262,"line_end":262,"column_start":10,"column_end":30,"is_primary":true,"text":[{"text":"        &(*(0 as *const $ty)).$field as *const _ as usize","highlight_start":10,"highlight_end":30}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs","byte_start":37806,"byte_end":37839,"line_start":1045,"line_end":1045,"column_start":33,"column_end":66,"is_primary":false,"text":[{"text":"            let pathlen = len - offset_of!(sockaddr_un, sun_path);","highlight_start":33,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"offset_of!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/macros.rs","byte_start":6237,"byte_end":6259,"line_start":260,"line_end":260,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! offset_of {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(deref_nullptr)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: dereferencing a null pointer\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/macros.rs:262:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &(*(0 as *const $ty)).$field as *const _ as usize\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/mod.rs:1045:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1045\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let pathlen = len - offset_of!(sockaddr_un, sun_path);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deref_nullptr)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `in6_addr` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs","byte_start":18036,"byte_end":18056,"line_start":547,"line_end":547,"column_start":55,"column_end":75,"is_primary":true,"text":[{"text":"        let mut in6_addr_var: libc::in6_addr = unsafe{mem::uninitialized()};","highlight_start":55,"highlight_end":75}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs","byte_start":18036,"byte_end":18056,"line_start":547,"line_end":547,"column_start":55,"column_end":75,"is_primary":true,"text":[{"text":"        let mut in6_addr_var: libc::in6_addr = unsafe{mem::uninitialized()};","highlight_start":55,"highlight_end":75}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `in6_addr` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs:547:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m547\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut in6_addr_var: libc::in6_addr = unsafe{mem::uninitialized()};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"dereferencing a null pointer","code":{"code":"deref_nullptr","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/macros.rs","byte_start":6303,"byte_end":6323,"line_start":262,"line_end":262,"column_start":10,"column_end":30,"is_primary":true,"text":[{"text":"        &(*(0 as *const $ty)).$field as *const _ as usize","highlight_start":10,"highlight_end":30}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs","byte_start":29569,"byte_end":29608,"line_start":852,"line_end":852,"column_start":86,"column_end":125,"is_primary":false,"text":[{"text":"            SockAddr::Unix(UnixAddr(ref addr, len)) => (mem::transmute(addr), (len + offset_of!(libc::sockaddr_un, sun_path)) as libc::socklen_t),","highlight_start":86,"highlight_end":125}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"offset_of!","def_site_span":{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/macros.rs","byte_start":6237,"byte_end":6259,"line_start":260,"line_end":260,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! offset_of {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: dereferencing a null pointer\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/macros.rs:262:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &(*(0 as *const $ty)).$field as *const _ as usize\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/socket/addr.rs:852:86\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m852\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            SockAddr::Unix(UnixAddr(ref addr, len)) => (mem::transmute(addr), (len + offset_of!(libc::sockaddr_un, sun_path)) as libc::socklen_t),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `offset_of` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `libc::stat` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":1756,"byte_end":1776,"line_start":80,"line_end":80,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":28,"highlight_end":48}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":1756,"byte_end":1776,"line_start":80,"line_end":80,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":28,"highlight_end":48}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `libc::stat` does not permit being left uninitialized\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:80:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut dst = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `libc::stat` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2068,"byte_end":2088,"line_start":93,"line_end":93,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":28,"highlight_end":48}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2068,"byte_end":2088,"line_start":93,"line_end":93,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":28,"highlight_end":48}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `libc::stat` does not permit being left uninitialized\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:93:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut dst = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `libc::stat` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2361,"byte_end":2381,"line_start":106,"line_end":106,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":28,"highlight_end":48}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2361,"byte_end":2381,"line_start":106,"line_end":106,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":28,"highlight_end":48}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `libc::stat` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:106:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut dst = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `libc::stat` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2626,"byte_end":2646,"line_start":115,"line_end":115,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":28,"highlight_end":48}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs","byte_start":2626,"byte_end":2646,"line_start":115,"line_end":115,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"    let mut dst = unsafe { mem::uninitialized() };","highlight_start":28,"highlight_end":48}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `libc::stat` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/stat.rs:115:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut dst = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"hiding a lifetime that's elided elsewhere is confusing","code":{"code":"mismatched_lifetime_syntaxes","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":9876,"byte_end":9881,"line_start":214,"line_end":214,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"    pub fn get_libc_termios(&self) -> Ref<libc::termios> {","highlight_start":29,"highlight_end":34}],"label":"the lifetime is elided here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":9886,"byte_end":9904,"line_start":214,"line_end":214,"column_start":39,"column_end":57,"is_primary":false,"text":[{"text":"    pub fn get_libc_termios(&self) -> Ref<libc::termios> {","highlight_start":39,"highlight_end":57}],"label":"the same lifetime is hidden here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the same lifetime is referred to in inconsistent ways, making the signature confusing","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"use `'_` for type paths","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":9890,"byte_end":9890,"line_start":214,"line_end":214,"column_start":43,"column_end":43,"is_primary":true,"text":[{"text":"    pub fn get_libc_termios(&self) -> Ref<libc::termios> {","highlight_start":43,"highlight_end":43}],"label":null,"suggested_replacement":"'_, ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consistently use `'_`","code":null,"level":"help","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":9877,"byte_end":9877,"line_start":214,"line_end":214,"column_start":30,"column_end":30,"is_primary":true,"text":[{"text":"    pub fn get_libc_termios(&self) -> Ref<libc::termios> {","highlight_start":30,"highlight_end":30}],"label":null,"suggested_replacement":"'_ ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":9890,"byte_end":9890,"line_start":214,"line_end":214,"column_start":43,"column_end":43,"is_primary":true,"text":[{"text":"    pub fn get_libc_termios(&self) -> Ref<libc::termios> {","highlight_start":43,"highlight_end":43}],"label":null,"suggested_replacement":"'_, ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: hiding a lifetime that's elided elsewhere is confusing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs:214:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_libc_termios(&self) -> Ref<libc::termios> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe same lifetime is hidden here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe lifetime is elided here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the same lifetime is referred to in inconsistent ways, making the signature confusing\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `'_` for type paths\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn get_libc_termios(&self) -> Ref<\u001b[0m\u001b[0m\u001b[38;5;10m'_, \u001b[0m\u001b[0mlibc::termios> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `libc::termios` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":11601,"byte_end":11621,"line_start":253,"line_end":253,"column_start":33,"column_end":53,"is_primary":true,"text":[{"text":"            inner: RefCell::new(mem::uninitialized()),","highlight_start":33,"highlight_end":53}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":11601,"byte_end":11621,"line_start":253,"line_end":253,"column_start":33,"column_end":53,"is_primary":true,"text":[{"text":"            inner: RefCell::new(mem::uninitialized()),","highlight_start":33,"highlight_end":53}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `libc::termios` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs:253:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            inner: RefCell::new(mem::uninitialized()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `libc::termios` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":40461,"byte_end":40481,"line_start":1032,"line_end":1032,"column_start":47,"column_end":67,"is_primary":true,"text":[{"text":"    let mut termios: libc::termios = unsafe { mem::uninitialized() };","highlight_start":47,"highlight_end":67}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs","byte_start":40461,"byte_end":40481,"line_start":1032,"line_end":1032,"column_start":47,"column_end":67,"is_primary":true,"text":[{"text":"    let mut termios: libc::termios = unsafe { mem::uninitialized() };","highlight_start":47,"highlight_end":67}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `libc::termios` does not permit being left uninitialized\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/termios.rs:1032:47\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1032\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut termios: libc::termios = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `UtsName` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/utsname.rs","byte_start":857,"byte_end":877,"line_start":34,"line_end":34,"column_start":32,"column_end":52,"is_primary":true,"text":[{"text":"        let mut ret: UtsName = mem::uninitialized();","highlight_start":32,"highlight_end":52}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/utsname.rs","byte_start":857,"byte_end":877,"line_start":34,"line_end":34,"column_start":32,"column_end":52,"is_primary":true,"text":[{"text":"        let mut ret: UtsName = mem::uninitialized();","highlight_start":32,"highlight_end":52}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized (in this struct field)","code":null,"level":"note","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/utsname.rs","byte_start":149,"byte_end":162,"line_start":8,"line_end":8,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"pub struct UtsName(libc::utsname);","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `UtsName` does not permit being left uninitialized\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/utsname.rs:34:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut ret: UtsName = mem::uninitialized();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: integers must be initialized (in this struct field)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/utsname.rs:8:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct UtsName(libc::utsname);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `fd_set` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/select.rs","byte_start":348,"byte_end":368,"line_start":17,"line_end":17,"column_start":34,"column_end":54,"is_primary":true,"text":[{"text":"        let mut fdset = unsafe { mem::uninitialized() };","highlight_start":34,"highlight_end":54}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/select.rs","byte_start":348,"byte_end":368,"line_start":17,"line_end":17,"column_start":34,"column_end":54,"is_primary":true,"text":[{"text":"        let mut fdset = unsafe { mem::uninitialized() };","highlight_start":34,"highlight_end":54}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `fd_set` does not permit being left uninitialized\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/select.rs:17:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut fdset = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `std::result::Result<Dqblk, Error>` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs","byte_start":8246,"byte_end":8266,"line_start":268,"line_end":268,"column_start":30,"column_end":50,"is_primary":true,"text":[{"text":"    let mut dqblk = unsafe { mem::uninitialized() };","highlight_start":30,"highlight_end":50}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs","byte_start":8246,"byte_end":8266,"line_start":268,"line_end":268,"column_start":30,"column_end":50,"is_primary":true,"text":[{"text":"    let mut dqblk = unsafe { mem::uninitialized() };","highlight_start":30,"highlight_end":50}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"enums with multiple inhabited variants have to be initialized to a variant","code":null,"level":"note","spans":[{"file_name":"/home/anon/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs","byte_start":20789,"byte_end":20810,"line_start":548,"line_end":548,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub enum Result<T, E> {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `std::result::Result<Dqblk, Error>` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/quota.rs:268:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut dqblk = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: enums with multiple inhabited variants have to be initialized to a variant\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:548:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m548\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Result<T, E> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `Statvfs` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs","byte_start":3824,"byte_end":3844,"line_start":126,"line_end":126,"column_start":33,"column_end":53,"is_primary":true,"text":[{"text":"        let mut stat: Statvfs = mem::uninitialized();","highlight_start":33,"highlight_end":53}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs","byte_start":3824,"byte_end":3844,"line_start":126,"line_end":126,"column_start":33,"column_end":53,"is_primary":true,"text":[{"text":"        let mut stat: Statvfs = mem::uninitialized();","highlight_start":33,"highlight_end":53}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized (in this struct field)","code":null,"level":"note","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs","byte_start":2140,"byte_end":2153,"line_start":60,"line_end":60,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"pub struct Statvfs(libc::statvfs);","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `Statvfs` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs:126:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut stat: Statvfs = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: integers must be initialized (in this struct field)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs:60:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Statvfs(libc::statvfs);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `Statvfs` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs","byte_start":4197,"byte_end":4217,"line_start":139,"line_end":139,"column_start":33,"column_end":53,"is_primary":true,"text":[{"text":"        let mut stat: Statvfs = mem::uninitialized();","highlight_start":33,"highlight_end":53}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs","byte_start":4197,"byte_end":4217,"line_start":139,"line_end":139,"column_start":33,"column_end":53,"is_primary":true,"text":[{"text":"        let mut stat: Statvfs = mem::uninitialized();","highlight_start":33,"highlight_end":53}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized (in this struct field)","code":null,"level":"note","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs","byte_start":2140,"byte_end":2153,"line_start":60,"line_end":60,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"pub struct Statvfs(libc::statvfs);","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `Statvfs` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs:139:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut stat: Statvfs = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: integers must be initialized (in this struct field)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/sys/statvfs.rs:60:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct Statvfs(libc::statvfs);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `ucontext_t` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/ucontext.rs","byte_start":370,"byte_end":390,"line_start":17,"line_end":17,"column_start":54,"column_end":74,"is_primary":true,"text":[{"text":"        let mut context: libc::ucontext_t = unsafe { mem::uninitialized() };","highlight_start":54,"highlight_end":74}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/ucontext.rs","byte_start":370,"byte_end":390,"line_start":17,"line_end":17,"column_start":54,"column_end":74,"is_primary":true,"text":[{"text":"        let mut context: libc::ucontext_t = unsafe { mem::uninitialized() };","highlight_start":54,"highlight_end":74}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `ucontext_t` does not permit being left uninitialized\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/ucontext.rs:17:54\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut context: libc::ucontext_t = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `[i32; 2]` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":30655,"byte_end":30675,"line_start":873,"line_end":873,"column_start":35,"column_end":55,"is_primary":true,"text":[{"text":"        let mut fds: [c_int; 2] = mem::uninitialized();","highlight_start":35,"highlight_end":55}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":30655,"byte_end":30675,"line_start":873,"line_end":873,"column_start":35,"column_end":55,"is_primary":true,"text":[{"text":"        let mut fds: [c_int; 2] = mem::uninitialized();","highlight_start":35,"highlight_end":55}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `[i32; 2]` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:873:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m873\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut fds: [c_int; 2] = mem::uninitialized();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the type `[i32; 2]` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":31524,"byte_end":31544,"line_start":900,"line_end":900,"column_start":40,"column_end":60,"is_primary":true,"text":[{"text":"    let mut fds: [c_int; 2] = unsafe { mem::uninitialized() };","highlight_start":40,"highlight_end":60}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs","byte_start":31524,"byte_end":31544,"line_start":900,"line_end":900,"column_start":40,"column_end":60,"is_primary":true,"text":[{"text":"    let mut fds: [c_int; 2] = unsafe { mem::uninitialized() };","highlight_start":40,"highlight_end":60}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the type `[i32; 2]` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/anon/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.10.0/src/unistd.rs:900:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m900\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut fds: [c_int; 2] = unsafe { mem::uninitialized() };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"215 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 215 warnings emitted\u001b[0m\n\n"}
